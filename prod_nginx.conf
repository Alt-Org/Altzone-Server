events { worker_connections 1024; }

http {
    include mime.types;

    server {
        access_log off; #disable logs
        error_log syslog error;
        server_name altzone.fi;

        location / {
            proxy_pass http://altzone_site:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;                                                                                      
                return 204;                                                                                                     
            } 

            add_header 'Access-Control-Allow-Origin' $http_origin always;                                                       
            add_header 'Access-Control-Allow-Methods' 'GET, POST, POST, PUT, DELETE, OPTIONS' always;                           
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;            
            add_header 'Access-Control-Allow-Credentials' 'true' always;                                                        
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            proxy_pass http://altzone_api:8080/;
        }

        gzip on;                                                                                                            
        gzip_comp_level 3;
        gzip_types text/css text/javascript image/png image/webp image/x-jng image/gif image/jpeg;

        location ^~ /api/public {
            root /usr/local/nginx;

            add_header Cache-Control 'public, max-age=2592000';
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            add_header 'Access-Control-Allow-Origin' $http_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Credentials' 'true';

            autoindex on;
            autoindex_format json;

            try_files $uri $uri/ =404;
        }

        location /game {
            root /usr/local/nginx;
            index index.html;

            # Specify MIME types for Brotli compression
            brotli on;
            brotli_static on;
            brotli_types text/plain text/css application/javascript application/json application/xml text/xml image/svg+xml;

            # Handling various file types
            include mime.types;
            default_type application/octet-stream;

            # Serve pre-compressed Brotli files with correct Content-Encoding header
            location ~* \.br$ {
                add_header Content-Encoding br;
                gzip off;
                brotli off; # Disable further on-the-fly Brotli compression

                # On-disk Brotli-precompressed JavaScript code files:
                location ~* \.js\.br$ {
                    default_type application/javascript;
                }

                # On-disk Brotli-precompressed WebAssembly files:
                location ~ \.wasm\.br$ {
                    default_type application/wasm;
                }

                try_files $uri =404;
            }

            try_files $uri $uri/ =404;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/altzone.fi/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/altzone.fi/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    server {
        if ($host = altzone.fi) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80;
        server_name altzone.fi;
        return 404; # managed by Certbot
    }

    

    server {
        access_log off; #disable logs
        error_log syslog error;
        server_name dev.altzone.fi;

        location / {
            proxy_pass http://altzone_site_dev:3001/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/altzone.fi/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/altzone.fi/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    # Redirect HTTP to HTTPS for the subdomain
    server {
        if ($host = dev.altzone.fi) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80;
        server_name dev.altzone.fi;
        return 404; # managed by Certbot
    }
}
